// Generated by Dagger (https://dagger.dev).
package te.app.notta.pages.myGroups.viewModels;

import dagger.internal.Factory;
import javax.inject.Provider;
import te.app.notta.repository.GroupRepository;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MyGroupsViewModel_Factory implements Factory<MyGroupsViewModel> {
  private final Provider<GroupRepository> repositoryProvider;

  private final Provider<GroupRepository> repositoryProvider2;

  public MyGroupsViewModel_Factory(Provider<GroupRepository> repositoryProvider,
      Provider<GroupRepository> repositoryProvider2) {
    this.repositoryProvider = repositoryProvider;
    this.repositoryProvider2 = repositoryProvider2;
  }

  @Override
  public MyGroupsViewModel get() {
    MyGroupsViewModel instance = newInstance(repositoryProvider.get());
    MyGroupsViewModel_MembersInjector.injectRepository(instance, repositoryProvider2.get());
    return instance;
  }

  public static MyGroupsViewModel_Factory create(Provider<GroupRepository> repositoryProvider,
      Provider<GroupRepository> repositoryProvider2) {
    return new MyGroupsViewModel_Factory(repositoryProvider, repositoryProvider2);
  }

  public static MyGroupsViewModel newInstance(GroupRepository repository) {
    return new MyGroupsViewModel(repository);
  }
}
