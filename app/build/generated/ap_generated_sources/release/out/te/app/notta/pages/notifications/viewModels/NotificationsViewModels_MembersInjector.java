// Generated by Dagger (https://dagger.dev).
package te.app.notta.pages.notifications.viewModels;

import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import te.app.notta.repository.AuthRepository;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NotificationsViewModels_MembersInjector implements MembersInjector<NotificationsViewModels> {
  private final Provider<AuthRepository> settingsRepositoryProvider;

  public NotificationsViewModels_MembersInjector(
      Provider<AuthRepository> settingsRepositoryProvider) {
    this.settingsRepositoryProvider = settingsRepositoryProvider;
  }

  public static MembersInjector<NotificationsViewModels> create(
      Provider<AuthRepository> settingsRepositoryProvider) {
    return new NotificationsViewModels_MembersInjector(settingsRepositoryProvider);
  }

  @Override
  public void injectMembers(NotificationsViewModels instance) {
    injectSettingsRepository(instance, settingsRepositoryProvider.get());
  }

  @InjectedFieldSignature("te.app.notta.pages.notifications.viewModels.NotificationsViewModels.settingsRepository")
  public static void injectSettingsRepository(NotificationsViewModels instance,
      AuthRepository settingsRepository) {
    instance.settingsRepository = settingsRepository;
  }
}
