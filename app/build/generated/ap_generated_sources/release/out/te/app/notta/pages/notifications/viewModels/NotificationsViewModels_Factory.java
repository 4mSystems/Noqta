// Generated by Dagger (https://dagger.dev).
package te.app.notta.pages.notifications.viewModels;

import dagger.internal.Factory;
import javax.inject.Provider;
import te.app.notta.repository.AuthRepository;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NotificationsViewModels_Factory implements Factory<NotificationsViewModels> {
  private final Provider<AuthRepository> settingsRepositoryProvider;

  private final Provider<AuthRepository> settingsRepositoryProvider2;

  public NotificationsViewModels_Factory(Provider<AuthRepository> settingsRepositoryProvider,
      Provider<AuthRepository> settingsRepositoryProvider2) {
    this.settingsRepositoryProvider = settingsRepositoryProvider;
    this.settingsRepositoryProvider2 = settingsRepositoryProvider2;
  }

  @Override
  public NotificationsViewModels get() {
    NotificationsViewModels instance = newInstance(settingsRepositoryProvider.get());
    NotificationsViewModels_MembersInjector.injectSettingsRepository(instance, settingsRepositoryProvider2.get());
    return instance;
  }

  public static NotificationsViewModels_Factory create(
      Provider<AuthRepository> settingsRepositoryProvider,
      Provider<AuthRepository> settingsRepositoryProvider2) {
    return new NotificationsViewModels_Factory(settingsRepositoryProvider, settingsRepositoryProvider2);
  }

  public static NotificationsViewModels newInstance(AuthRepository settingsRepository) {
    return new NotificationsViewModels(settingsRepository);
  }
}
