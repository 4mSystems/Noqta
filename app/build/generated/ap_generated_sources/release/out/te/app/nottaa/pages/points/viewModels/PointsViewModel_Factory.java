// Generated by Dagger (https://dagger.dev).
package te.app.nottaa.pages.points.viewModels;

import dagger.internal.Factory;
import javax.inject.Provider;
import te.app.nottaa.repository.GroupRepository;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PointsViewModel_Factory implements Factory<PointsViewModel> {
  private final Provider<GroupRepository> repositoryProvider;

  private final Provider<GroupRepository> repositoryProvider2;

  public PointsViewModel_Factory(Provider<GroupRepository> repositoryProvider,
      Provider<GroupRepository> repositoryProvider2) {
    this.repositoryProvider = repositoryProvider;
    this.repositoryProvider2 = repositoryProvider2;
  }

  @Override
  public PointsViewModel get() {
    PointsViewModel instance = newInstance(repositoryProvider.get());
    PointsViewModel_MembersInjector.injectRepository(instance, repositoryProvider2.get());
    return instance;
  }

  public static PointsViewModel_Factory create(Provider<GroupRepository> repositoryProvider,
      Provider<GroupRepository> repositoryProvider2) {
    return new PointsViewModel_Factory(repositoryProvider, repositoryProvider2);
  }

  public static PointsViewModel newInstance(GroupRepository repository) {
    return new PointsViewModel(repository);
  }
}
