// Generated by Dagger (https://dagger.dev).
package grand.app.aber_provider.pages.postDetails;

import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import grand.app.aber_provider.pages.postDetails.viewModels.PostDetailsViewModel;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LiveDetailsFragment_MembersInjector implements MembersInjector<LiveDetailsFragment> {
  private final Provider<PostDetailsViewModel> viewModelProvider;

  public LiveDetailsFragment_MembersInjector(Provider<PostDetailsViewModel> viewModelProvider) {
    this.viewModelProvider = viewModelProvider;
  }

  public static MembersInjector<LiveDetailsFragment> create(
      Provider<PostDetailsViewModel> viewModelProvider) {
    return new LiveDetailsFragment_MembersInjector(viewModelProvider);
  }

  @Override
  public void injectMembers(LiveDetailsFragment instance) {
    injectViewModel(instance, viewModelProvider.get());
  }

  @InjectedFieldSignature("grand.app.aber_provider.pages.postDetails.LiveDetailsFragment.viewModel")
  public static void injectViewModel(LiveDetailsFragment instance, PostDetailsViewModel viewModel) {
    instance.viewModel = viewModel;
  }
}
