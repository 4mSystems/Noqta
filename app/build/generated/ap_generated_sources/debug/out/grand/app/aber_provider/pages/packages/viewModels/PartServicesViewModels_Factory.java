// Generated by Dagger (https://dagger.dev).
package grand.app.aber_provider.pages.packages.viewModels;

import dagger.internal.Factory;
import grand.app.aber_provider.repository.PostRepository;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PartServicesViewModels_Factory implements Factory<PartServicesViewModels> {
  private final Provider<PostRepository> postRepositoryProvider;

  private final Provider<PostRepository> postRepositoryProvider2;

  public PartServicesViewModels_Factory(Provider<PostRepository> postRepositoryProvider,
      Provider<PostRepository> postRepositoryProvider2) {
    this.postRepositoryProvider = postRepositoryProvider;
    this.postRepositoryProvider2 = postRepositoryProvider2;
  }

  @Override
  public PartServicesViewModels get() {
    PartServicesViewModels instance = newInstance(postRepositoryProvider.get());
    PartServicesViewModels_MembersInjector.injectPostRepository(instance, postRepositoryProvider2.get());
    return instance;
  }

  public static PartServicesViewModels_Factory create(
      Provider<PostRepository> postRepositoryProvider,
      Provider<PostRepository> postRepositoryProvider2) {
    return new PartServicesViewModels_Factory(postRepositoryProvider, postRepositoryProvider2);
  }

  public static PartServicesViewModels newInstance(PostRepository postRepository) {
    return new PartServicesViewModels(postRepository);
  }
}
