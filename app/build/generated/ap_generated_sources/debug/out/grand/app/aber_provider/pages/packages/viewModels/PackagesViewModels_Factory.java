// Generated by Dagger (https://dagger.dev).
package grand.app.aber_provider.pages.packages.viewModels;

import dagger.internal.Factory;
import grand.app.aber_provider.repository.ServicesRepository;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PackagesViewModels_Factory implements Factory<PackagesViewModels> {
  private final Provider<ServicesRepository> servicesRepositoryProvider;

  private final Provider<ServicesRepository> servicesRepositoryProvider2;

  public PackagesViewModels_Factory(Provider<ServicesRepository> servicesRepositoryProvider,
      Provider<ServicesRepository> servicesRepositoryProvider2) {
    this.servicesRepositoryProvider = servicesRepositoryProvider;
    this.servicesRepositoryProvider2 = servicesRepositoryProvider2;
  }

  @Override
  public PackagesViewModels get() {
    PackagesViewModels instance = newInstance(servicesRepositoryProvider.get());
    PackagesViewModels_MembersInjector.injectServicesRepository(instance, servicesRepositoryProvider2.get());
    return instance;
  }

  public static PackagesViewModels_Factory create(
      Provider<ServicesRepository> servicesRepositoryProvider,
      Provider<ServicesRepository> servicesRepositoryProvider2) {
    return new PackagesViewModels_Factory(servicesRepositoryProvider, servicesRepositoryProvider2);
  }

  public static PackagesViewModels newInstance(ServicesRepository servicesRepository) {
    return new PackagesViewModels(servicesRepository);
  }
}
