// Generated by Dagger (https://dagger.dev).
package grand.app.aber_provider.pages.profile.viewModels;

import dagger.internal.Factory;
import grand.app.aber_provider.repository.ServicesRepository;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ProfileFollowersViewModels_Factory implements Factory<ProfileFollowersViewModels> {
  private final Provider<ServicesRepository> postRepositoryProvider;

  private final Provider<ServicesRepository> postRepositoryProvider2;

  public ProfileFollowersViewModels_Factory(Provider<ServicesRepository> postRepositoryProvider,
      Provider<ServicesRepository> postRepositoryProvider2) {
    this.postRepositoryProvider = postRepositoryProvider;
    this.postRepositoryProvider2 = postRepositoryProvider2;
  }

  @Override
  public ProfileFollowersViewModels get() {
    ProfileFollowersViewModels instance = newInstance(postRepositoryProvider.get());
    ProfileFollowersViewModels_MembersInjector.injectPostRepository(instance, postRepositoryProvider2.get());
    return instance;
  }

  public static ProfileFollowersViewModels_Factory create(
      Provider<ServicesRepository> postRepositoryProvider,
      Provider<ServicesRepository> postRepositoryProvider2) {
    return new ProfileFollowersViewModels_Factory(postRepositoryProvider, postRepositoryProvider2);
  }

  public static ProfileFollowersViewModels newInstance(ServicesRepository postRepository) {
    return new ProfileFollowersViewModels(postRepository);
  }
}
