// Generated by Dagger (https://dagger.dev).
package grand.app.aber_provider.pages.services.viewModels;

import dagger.internal.Factory;
import grand.app.aber_provider.repository.PostRepository;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ServicesViewModels_Factory implements Factory<ServicesViewModels> {
  private final Provider<PostRepository> postRepositoryProvider;

  private final Provider<PostRepository> postRepositoryProvider2;

  public ServicesViewModels_Factory(Provider<PostRepository> postRepositoryProvider,
      Provider<PostRepository> postRepositoryProvider2) {
    this.postRepositoryProvider = postRepositoryProvider;
    this.postRepositoryProvider2 = postRepositoryProvider2;
  }

  @Override
  public ServicesViewModels get() {
    ServicesViewModels instance = newInstance(postRepositoryProvider.get());
    ServicesViewModels_MembersInjector.injectPostRepository(instance, postRepositoryProvider2.get());
    return instance;
  }

  public static ServicesViewModels_Factory create(Provider<PostRepository> postRepositoryProvider,
      Provider<PostRepository> postRepositoryProvider2) {
    return new ServicesViewModels_Factory(postRepositoryProvider, postRepositoryProvider2);
  }

  public static ServicesViewModels newInstance(PostRepository postRepository) {
    return new ServicesViewModels(postRepository);
  }
}
