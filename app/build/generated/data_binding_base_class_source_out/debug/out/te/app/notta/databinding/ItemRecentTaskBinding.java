// Generated by data binding compiler. Do not edit!
package te.app.notta.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Barrier;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.Deprecated;
import java.lang.Object;
import te.app.notta.R;
import te.app.notta.customViews.views.CustomTextViewMedium;
import te.app.notta.customViews.views.CustomTextViewRegular;
import te.app.notta.pages.home.viewModels.ItemHomeViewModel;

public abstract class ItemRecentTaskBinding extends ViewDataBinding {
  @NonNull
  public final MaterialCardView MaterialCardView;

  @NonNull
  public final Barrier br4;

  @NonNull
  public final MaterialButton btnTech;

  @NonNull
  public final MaterialButton btnTechType;

  @NonNull
  public final CustomTextViewRegular tvDate;

  @NonNull
  public final CustomTextViewMedium tvDetails;

  @Bindable
  protected ItemHomeViewModel mViewModel;

  protected ItemRecentTaskBinding(Object _bindingComponent, View _root, int _localFieldCount,
      MaterialCardView MaterialCardView, Barrier br4, MaterialButton btnTech,
      MaterialButton btnTechType, CustomTextViewRegular tvDate, CustomTextViewMedium tvDetails) {
    super(_bindingComponent, _root, _localFieldCount);
    this.MaterialCardView = MaterialCardView;
    this.br4 = br4;
    this.btnTech = btnTech;
    this.btnTechType = btnTechType;
    this.tvDate = tvDate;
    this.tvDetails = tvDetails;
  }

  public abstract void setViewModel(@Nullable ItemHomeViewModel viewModel);

  @Nullable
  public ItemHomeViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static ItemRecentTaskBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_recent_task, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemRecentTaskBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemRecentTaskBinding>inflateInternal(inflater, R.layout.item_recent_task, root, attachToRoot, component);
  }

  @NonNull
  public static ItemRecentTaskBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_recent_task, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemRecentTaskBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemRecentTaskBinding>inflateInternal(inflater, R.layout.item_recent_task, null, false, component);
  }

  public static ItemRecentTaskBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemRecentTaskBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemRecentTaskBinding)bind(component, view, R.layout.item_recent_task);
  }
}
