// Generated by data binding compiler. Do not edit!
package grand.app.aber_provider.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.Barrier;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.smarteist.autoimageslider.SliderView;
import grand.app.aber_provider.R;
import grand.app.aber_provider.customViews.views.CustomTextViewMedium;
import grand.app.aber_provider.pages.splash.SplashViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentOnboardBinding extends ViewDataBinding {
  @NonNull
  public final FloatingActionButton appCompatButtonNext;

  @NonNull
  public final AppCompatButton appCompatFinish;

  @NonNull
  public final Barrier br;

  @NonNull
  public final SliderView imageSlider;

  @NonNull
  public final ConstraintLayout searchContainer;

  @NonNull
  public final CustomTextViewMedium skip;

  @Bindable
  protected SplashViewModel mOnBoardViewModels;

  protected FragmentOnboardBinding(Object _bindingComponent, View _root, int _localFieldCount,
      FloatingActionButton appCompatButtonNext, AppCompatButton appCompatFinish, Barrier br,
      SliderView imageSlider, ConstraintLayout searchContainer, CustomTextViewMedium skip) {
    super(_bindingComponent, _root, _localFieldCount);
    this.appCompatButtonNext = appCompatButtonNext;
    this.appCompatFinish = appCompatFinish;
    this.br = br;
    this.imageSlider = imageSlider;
    this.searchContainer = searchContainer;
    this.skip = skip;
  }

  public abstract void setOnBoardViewModels(@Nullable SplashViewModel onBoardViewModels);

  @Nullable
  public SplashViewModel getOnBoardViewModels() {
    return mOnBoardViewModels;
  }

  @NonNull
  public static FragmentOnboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_onboard, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentOnboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentOnboardBinding>inflateInternal(inflater, R.layout.fragment_onboard, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentOnboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_onboard, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentOnboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentOnboardBinding>inflateInternal(inflater, R.layout.fragment_onboard, null, false, component);
  }

  public static FragmentOnboardBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentOnboardBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentOnboardBinding)bind(component, view, R.layout.fragment_onboard);
  }
}
