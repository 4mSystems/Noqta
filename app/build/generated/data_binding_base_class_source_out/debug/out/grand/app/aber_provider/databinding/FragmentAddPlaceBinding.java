// Generated by data binding compiler. Do not edit!
package grand.app.aber_provider.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.Barrier;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import grand.app.aber_provider.R;
import grand.app.aber_provider.pages.myLocations.viewModels.MyLocationsViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentAddPlaceBinding extends ViewDataBinding {
  @NonNull
  public final Barrier br;

  @NonNull
  public final TextInputEditText city;

  @NonNull
  public final AppCompatImageView curve;

  @NonNull
  public final TextInputLayout inputBuildingNumber;

  @NonNull
  public final TextInputLayout inputCity;

  @NonNull
  public final TextInputLayout inputCountry;

  @NonNull
  public final TextInputLayout inputFloor;

  @NonNull
  public final TextInputLayout inputMark;

  @NonNull
  public final TextInputLayout inputPhone;

  @NonNull
  public final TextInputLayout inputStreet;

  @NonNull
  public final TextInputLayout inputTitle;

  @NonNull
  public final TextInputLayout inputTitle2;

  @NonNull
  public final TextInputEditText location;

  @NonNull
  public final TextInputEditText region;

  @Bindable
  protected MyLocationsViewModel mViewModel;

  protected FragmentAddPlaceBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Barrier br, TextInputEditText city, AppCompatImageView curve,
      TextInputLayout inputBuildingNumber, TextInputLayout inputCity, TextInputLayout inputCountry,
      TextInputLayout inputFloor, TextInputLayout inputMark, TextInputLayout inputPhone,
      TextInputLayout inputStreet, TextInputLayout inputTitle, TextInputLayout inputTitle2,
      TextInputEditText location, TextInputEditText region) {
    super(_bindingComponent, _root, _localFieldCount);
    this.br = br;
    this.city = city;
    this.curve = curve;
    this.inputBuildingNumber = inputBuildingNumber;
    this.inputCity = inputCity;
    this.inputCountry = inputCountry;
    this.inputFloor = inputFloor;
    this.inputMark = inputMark;
    this.inputPhone = inputPhone;
    this.inputStreet = inputStreet;
    this.inputTitle = inputTitle;
    this.inputTitle2 = inputTitle2;
    this.location = location;
    this.region = region;
  }

  public abstract void setViewModel(@Nullable MyLocationsViewModel viewModel);

  @Nullable
  public MyLocationsViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static FragmentAddPlaceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_add_place, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentAddPlaceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentAddPlaceBinding>inflateInternal(inflater, R.layout.fragment_add_place, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentAddPlaceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_add_place, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentAddPlaceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentAddPlaceBinding>inflateInternal(inflater, R.layout.fragment_add_place, null, false, component);
  }

  public static FragmentAddPlaceBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentAddPlaceBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentAddPlaceBinding)bind(component, view, R.layout.fragment_add_place);
  }
}
