// Generated by data binding compiler. Do not edit!
package te.app.nottaa.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import com.google.android.material.tabs.TabLayout;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.Deprecated;
import java.lang.Object;
import te.app.nottaa.R;
import te.app.nottaa.customViews.views.CustomTextViewMedium;
import te.app.nottaa.pages.auth.register.RegisterViewModel;

public abstract class FragmentRegisterBinding extends ViewDataBinding {
  @NonNull
  public final AppCompatButton appCompatButtonNext;

  @NonNull
  public final TextInputEditText auto;

  @NonNull
  public final AppCompatImageView boardHeader;

  @NonNull
  public final TextInputLayout inputCertifcate;

  @NonNull
  public final TextInputLayout inputEmail;

  @NonNull
  public final TextInputLayout inputName;

  @NonNull
  public final TextInputLayout inputNewPassword;

  @NonNull
  public final TextInputLayout inputPassword;

  @NonNull
  public final TextInputLayout inputSpecialist;

  @NonNull
  public final CustomTextViewMedium login;

  @NonNull
  public final CustomTextViewMedium loginHeader;

  @NonNull
  public final CustomTextViewMedium loginNoAccount;

  @NonNull
  public final CustomTextViewMedium loginNoAccountBold;

  @NonNull
  public final CircularProgressIndicator progress;

  @NonNull
  public final AppCompatEditText specialist;

  @NonNull
  public final ConstraintLayout tabLayout;

  @NonNull
  public final TabLayout tabs;

  @Bindable
  protected RegisterViewModel mViewmodel;

  protected FragmentRegisterBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AppCompatButton appCompatButtonNext, TextInputEditText auto, AppCompatImageView boardHeader,
      TextInputLayout inputCertifcate, TextInputLayout inputEmail, TextInputLayout inputName,
      TextInputLayout inputNewPassword, TextInputLayout inputPassword,
      TextInputLayout inputSpecialist, CustomTextViewMedium login, CustomTextViewMedium loginHeader,
      CustomTextViewMedium loginNoAccount, CustomTextViewMedium loginNoAccountBold,
      CircularProgressIndicator progress, AppCompatEditText specialist, ConstraintLayout tabLayout,
      TabLayout tabs) {
    super(_bindingComponent, _root, _localFieldCount);
    this.appCompatButtonNext = appCompatButtonNext;
    this.auto = auto;
    this.boardHeader = boardHeader;
    this.inputCertifcate = inputCertifcate;
    this.inputEmail = inputEmail;
    this.inputName = inputName;
    this.inputNewPassword = inputNewPassword;
    this.inputPassword = inputPassword;
    this.inputSpecialist = inputSpecialist;
    this.login = login;
    this.loginHeader = loginHeader;
    this.loginNoAccount = loginNoAccount;
    this.loginNoAccountBold = loginNoAccountBold;
    this.progress = progress;
    this.specialist = specialist;
    this.tabLayout = tabLayout;
    this.tabs = tabs;
  }

  public abstract void setViewmodel(@Nullable RegisterViewModel viewmodel);

  @Nullable
  public RegisterViewModel getViewmodel() {
    return mViewmodel;
  }

  @NonNull
  public static FragmentRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_register, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentRegisterBinding>inflateInternal(inflater, R.layout.fragment_register, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_register, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentRegisterBinding>inflateInternal(inflater, R.layout.fragment_register, null, false, component);
  }

  public static FragmentRegisterBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentRegisterBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentRegisterBinding)bind(component, view, R.layout.fragment_register);
  }
}
